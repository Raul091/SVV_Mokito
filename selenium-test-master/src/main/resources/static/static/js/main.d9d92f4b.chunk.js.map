{"version":3,"sources":["components/Navbar.tsx","components/Login.tsx","store/subjects.ts","store/useSubjects.ts","components/SubjectYearSelect.tsx","components/SubjectsTable.tsx","components/AddSubjectDialog.tsx","components/TeacherPage.tsx","components/SubjectCard.tsx","components/StudentPage.tsx","components/SubjectPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Navbar","path","useLocation","navigation","useNavigate","isLogoutVisible","pathname","react_default","a","createElement","Box","sx","flexGrow","AppBar","position","Toolbar","react_router_dom_dist","to","style","textDecoration","color","Typography","variant","flex","Button","onClick","Login","usernameRef","useRef","passwordRef","_React$useState","React","useState","_React$useState2","Object","slicedToArray","error","setError","navigate","Fragment","className","TextField","inputRef","id","label","fullWidth","margin","type","current","username","value","password","Subjects","name","year","description","studentCount","useSubjects","create","set","get","subjects","addSubject","subject","state","concat","toConsumableArray","getSubject","find","getSubjectYears","Array","from","Set","map","sort","SubjectYearSelect","_ref","onYearChange","subjectYears","handleChange","useCallback","event","newYear","target","FormControl","InputLabel","Select","labelId","onChange","MenuItem","key","SubjectsTable","TableContainer","component","Paper","Table","minWidth","aria-label","TableHead","TableRow","TableCell","align","TableBody","onTableRowClick","scope","AddSubjectDialog","open","onClose","onAdd","_useState","_useState2","setName","_useState3","_useState4","setYear","_useState5","_useState6","setDescription","areAllFieldsFilled","Dialog","DialogTitle","DialogContent","DialogActions","disabled","TeacherPage","isOpen","setIsOpen","filteredSubjects","filter","display","flexDirection","src_components_SubjectYearSelect","src_components_SubjectsTable","src_components_AddSubjectDialog","Fab","bottom","right","Add_default","SubjectCard","Card","CardContent","CardActions","StudentPage","filterRef","setFilter","toLowerCase","includes","onFilterChange","placeholder","flexWrap","src_components_SubjectCard","length","SubjectPage","useParams","subjectName","App","components_Navbar","dist","index","element","src_components_Login","src_components_StudentPage","components_TeacherPage","components_SubjectPage","replace","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.d9d92f4b.chunk.js","sourcesContent":["import React from \"react\";\nimport { AppBar, Box, Button, Toolbar, Typography } from \"@mui/material\";\nimport { NavLink, useLocation, useNavigate } from \"react-router-dom\";\n\nconst Navbar: React.FC = () => {\n    const path = useLocation();\n    const navigation = useNavigate();\n    const isLogoutVisible = path.pathname !== \"/\";\n\n    const onLogoutButtonClick = () => {\n        navigation(\"/\");\n    }\n\n    return (\n        <Box sx={{flexGrow: 1}}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <NavLink to=\"/\" style={{textDecoration: \"none\", color: \"white\"}}>\n                        <Typography variant=\"h6\">\n                            School App\n                        </Typography>\n                    </NavLink>\n                    <div style={{flex: \"1\"}}></div>\n                    {isLogoutVisible && <Button color=\"inherit\" onClick={onLogoutButtonClick}>Logout</Button>}\n                </Toolbar>\n            </AppBar>\n        </Box>\n    )\n}\n\nexport default Navbar;\n","import React, { useRef } from \"react\";\nimport { Button, TextField, Typography } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./Login.css\";\n\nconst Login: React.FC = () => {\n    const usernameRef = useRef<HTMLInputElement>(null);\n    const passwordRef = useRef<HTMLInputElement>(null);\n    const [error, setError] = React.useState(\"\");\n    const navigate = useNavigate();\n\n    const onLoginButtonClick = () => {\n        if (usernameRef.current && passwordRef.current) {\n            const username = usernameRef.current.value;\n            const password = passwordRef.current.value;\n            if (username === \"teacher\" && password === \"teacher\") {\n                navigate(\"/teacher\");\n            } else if (username === \"student\" && password === \"student\") {\n                navigate(\"/student\");\n            } else {\n                setError(\"Invalid username or password\");\n            }\n\n            usernameRef.current.value = \"\";\n            passwordRef.current.value = \"\";\n        }\n    };\n\n    return (\n        <>\n            <h1>Login</h1>\n            <div className={\"login-box\"}>\n                <div className={\"login-box-div\"}>\n                    <TextField inputRef={usernameRef} id={\"username\"} label={\"Username\"} variant={\"outlined\"}\n                               fullWidth style={{margin: \"16px\"}}/>\n                    <TextField inputRef={passwordRef} id={\"password\"} label={\"Password\"} type={\"password\"}\n                               variant={\"outlined\"} fullWidth style={{margin: \"16px\"}}/>\n\n                    {error && <Typography color={\"error.main\"}>Username or password is invalid!</Typography>}\n                    <Button className={\"login-button\"} variant=\"contained\" onClick={onLoginButtonClick}>Login</Button>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Login;\n","import { Subject } from \"../types/subject\";\n\nexport const Subjects: Subject[] = [\n    {\n        name: \"VVS\",\n        year: \"4\",\n        description: \"Verificare si validare software\",\n        studentCount: 100\n    },\n    {\n        name: \"AC\",\n        year: \"2\",\n        description: \"Arhitectura calculatoarelor\",\n        studentCount: 200\n    },\n    {\n        name: \"TS\",\n        year: \"2\",\n        description: \"Teoria sistemelor\",\n        studentCount: 300\n    },\n    {\n        name: \"SVV\",\n        year: \"4\",\n        description: \"Software Verification and Validation\",\n        studentCount: 100\n    },\n    {\n        name: \"ED\",\n        year: \"3\",\n        description: \"Explorarea datelor\",\n        studentCount: 200\n    },\n    {\n        name: \"OOP\",\n        year: \"2\",\n        description: \"Object Oriented Programming\",\n        studentCount: 120\n    },\n    {\n        name: \"CT\",\n        year: \"3\",\n        description: \"Compilation Techniques\",\n        studentCount: 150\n    },\n    {\n        name: \"DP\",\n        year: \"3\",\n        description: \"Distributed Programming\",\n        studentCount: 100\n    },\n    {\n        name: \"DM\",\n        year: \"3\",\n        description: \"Data Mining\",\n        studentCount: 150\n    },\n    {\n        name: \"FLA\",\n        year: \"4\",\n        description: \"Fuzzy Logic and Applications\",\n        studentCount: 140\n    },\n    {\n        name: \"POO\",\n        year: \"2\",\n        description: \"Programare orientata pe obiecte\",\n        studentCount: 300\n    },\n    {\n        name: \"PDSS\",\n        year: \"3\",\n        description: \"Proiectarea detaliata a sistemelor software\",\n        studentCount: 200\n    },\n    {\n        name: \"MAC\",\n        year: \"1\",\n        description: \"Matematici asistate de calculator\",\n        studentCount: 100\n    },\n\n    {\n        name: \"SMA\",\n        year: \"4\",\n        description: \"Sisteme mobile si aplicatii\",\n        studentCount: 100\n    },\n    {\n        name: \"OS\",\n        year: \"2\",\n        description: \"Operating Systems\",\n        studentCount: 200\n    },\n    {\n        name: \"CAM\",\n        year: \"1\",\n        description: \"Computer Assisted Mathematics\",\n        studentCount: 100\n    },\n    {\n        name: \"SO\",\n        year: \"3\",\n        description: \"Sisteme de operare\",\n        studentCount: 240\n    }\n];\n","import create from 'zustand';\nimport { Subject } from \"../types/subject\";\nimport { Subjects } from \"./subjects\";\n\nexport interface SubjectsState {\n    subjects: Subject[];\n    addSubject: (subject: Subject) => void;\n    getSubject: (name: string | undefined) => Subject | undefined;\n    getSubjectYears: () => string[];\n}\n\nexport const useSubjects = create<SubjectsState>((set, get) => ({\n    subjects: Subjects,\n    addSubject: (subject) => set((state) => ({subjects: [...state.subjects, subject]})),\n    getSubject: (name) => get().subjects.find((subject) => subject.name === name),\n    getSubjectYears: () => Array.from(new Set(get().subjects.map((subject) => subject.year))).sort()\n}));\n","import React, { useCallback } from \"react\";\nimport { FormControl, InputLabel, MenuItem, Select } from \"@mui/material\";\nimport { useSubjects } from \"../store/useSubjects\";\nimport { SelectChangeEvent } from \"@mui/material/Select/SelectInput\";\nimport \"./SubjectYearSelect.css\";\n\ninterface SubjectYearSelectProps {\n    year: string;\n    onYearChange: (value: string) => void;\n}\n\nconst SubjectYearSelect: React.FC<SubjectYearSelectProps> = ({year, onYearChange}) => {\n    const getSubjectYears = useSubjects(state => state.getSubjectYears);\n    const subjectYears = getSubjectYears();\n\n    const handleChange = useCallback((event: SelectChangeEvent) => {\n        const newYear = event.target.value;\n        onYearChange(newYear);\n    }, [onYearChange]);\n\n    return (\n        <FormControl className={\"year-select-box\"}>\n            <InputLabel id={\"subject-year-select-label\"}>Year</InputLabel>\n            <Select\n                id={\"subject-year-select\"}\n                labelId={\"subject-year-select-label\"}\n                value={year}\n                label={\"Year\"}\n                onChange={handleChange}>\n                {subjectYears.map(year => <MenuItem key={year} value={year}>{year}</MenuItem>)}\n            </Select>\n        </FormControl>\n    );\n}\n\nexport default SubjectYearSelect;\n","import React, { useCallback } from \"react\";\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { Subject } from \"../types/subject\";\nimport \"./SubjectsTable.css\";\nimport { useNavigate } from \"react-router-dom\";\n\ninterface SubjectsTableProps {\n    subjects: Subject[];\n}\n\nconst SubjectsTable: React.FC<SubjectsTableProps> = ({subjects}) => {\n    const navigate = useNavigate();\n\n    const onTableRowClick = (subject: Subject) => {\n        navigate(\"/subject/\" + subject.name);\n    };\n\n    return (\n        <TableContainer component={Paper} className={\"students-table\"}>\n            <Table sx={{minWidth: 650}} aria-label=\"simple table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Name</TableCell>\n                        <TableCell>Year</TableCell>\n                        <TableCell align=\"right\">Students Count</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {subjects.map((subject) => (\n                        <TableRow\n                            key={subject.name}\n                            onClick={() => onTableRowClick(subject)}\n                        >\n                            <TableCell component=\"th\" scope=\"row\">\n                                {subject.name}\n                            </TableCell>\n                            <TableCell>{subject.year}</TableCell>\n                            <TableCell align=\"right\">{subject.studentCount}</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    )\n}\n\nexport default SubjectsTable;\n","import React, { ChangeEvent, useState } from \"react\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, TextField } from \"@mui/material\";\nimport \"./AddSubjectDialog.css\";\n\ninterface AddSubjectDialogProps {\n    open: boolean;\n    onClose: () => void;\n    onAdd: (name: string, year: string, description: string) => void;\n}\n\nconst AddSubjectDialog: React.FC<AddSubjectDialogProps> = ({open, onClose, onAdd}) => {\n    const [name, setName] = useState(\"\");\n    const [year, setYear] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n\n    const onNameChange = (event: ChangeEvent<HTMLInputElement>) => {\n        setName(event.target.value);\n    }\n    const onYearChange = (event: ChangeEvent<HTMLInputElement>) => {\n        setYear(event.target.value);\n    }\n    const onDescriptionChange = (event: ChangeEvent<HTMLInputElement>) => {\n        setDescription(event.target.value);\n    }\n\n    const areAllFieldsFilled = name && year && description;\n\n    const handleAdd = () => {\n        if (areAllFieldsFilled) {\n            onAdd(name, year, description);\n            setName(\"\");\n            setYear(\"\");\n            setDescription(\"\");\n        }\n    }\n\n    return (\n        <Dialog open={open} onClose={onClose}>\n            <DialogTitle>Add New Subject</DialogTitle>\n            <DialogContent>\n                <TextField value={name} onChange={onNameChange} id={\"new-name\"} label={\"Name\"} variant={\"outlined\"}\n                           fullWidth className={\"text-input\"}/>\n                <TextField value={year} onChange={onYearChange} id={\"new-year\"} label={\"Year\"} type={\"number\"}\n                           variant={\"outlined\"} fullWidth className={\"text-input\"} />\n                <TextField value={description} onChange={onDescriptionChange} id={\"new-student-count\"}\n                           label={\"Description\"} variant={\"outlined\"}\n                           fullWidth className={\"text-input\"}/>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose}>CANCEL</Button>\n                <Button onClick={handleAdd} disabled={!areAllFieldsFilled}>ADD</Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nexport default AddSubjectDialog;\n","import React, { useState } from \"react\";\nimport { Fab } from \"@mui/material\";\nimport AddIcon from '@mui/icons-material/Add';\nimport SubjectYearSelect from \"./SubjectYearSelect\";\nimport { useSubjects } from \"../store/useSubjects\";\nimport SubjectsTable from \"./SubjectsTable\";\nimport AddSubjectDialog from \"./AddSubjectDialog\";\nimport { Subject } from \"../types/subject\";\n\nconst TeacherPage: React.FC = () => {\n    const [year, setYear] = useState(\"1\");\n    const [isOpen, setIsOpen] = useState(false);\n    const subjects = useSubjects(state => state.subjects);\n    const addSubject = useSubjects(state => state.addSubject);\n    const filteredSubjects = subjects.filter(subject => subject.year === year);\n\n    const onAddSubjectButtonClick = () => {\n        setIsOpen(true);\n    }\n    const onAddSubjectDialogClose = () => {\n        setIsOpen(false);\n    }\n    const onAddSubjectDialog = (name: string, year: string, description: string) => {\n        setIsOpen(false);\n        const subject: Subject = {name, year, studentCount: 0, description};\n        addSubject(subject);\n    }\n\n    return (\n        <div>\n            <h1>Teacher Page</h1>\n            <div style={{display: \"flex\", flexDirection: \"column\"}}>\n                <SubjectYearSelect year={year} onYearChange={setYear}/>\n                <SubjectsTable subjects={filteredSubjects}/>\n            </div>\n            <AddSubjectDialog open={isOpen} onClose={onAddSubjectDialogClose} onAdd={onAddSubjectDialog}/>\n            <Fab color=\"primary\" aria-label=\"add\" style={{position: \"fixed\", bottom: \"20px\", right: \"20px\"}}\n                 onClick={onAddSubjectButtonClick}>\n                <AddIcon/>\n            </Fab>\n        </div>\n    )\n}\n\nexport default TeacherPage;\n","import React from \"react\";\nimport { Subject } from \"../types/subject\";\nimport { Button, Card, CardActions, CardContent, Typography } from \"@mui/material\";\nimport \"./SubjectCard.css\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport interface SubjectCardProps {\n    subject: Subject;\n}\n\nconst SubjectCard: React.FC<SubjectCardProps> = ({subject}) => {\n    const navigation = useNavigate();\n\n    const onDetailsButtonClick = () => {\n        navigation(`/subject/${subject.name}`);\n    }\n\n    return (\n        <Card className={\"subject-card\"} variant={\"outlined\"}>\n            <CardContent>\n                <Typography variant={\"h5\"}>{subject.name}</Typography>\n                <Typography variant={\"body1\"}>{subject.description}</Typography>\n            </CardContent>\n            <CardActions>\n                <Button onClick={onDetailsButtonClick}>DETAILS</Button>\n            </CardActions>\n        </Card>\n    )\n}\n\nexport default SubjectCard;\n","import React, { useCallback, useRef } from \"react\";\nimport { useSubjects } from \"../store/useSubjects\";\nimport SubjectCard from \"./SubjectCard\";\nimport { TextField } from \"@mui/material\";\nimport \"./StudentPage.css\";\n\nconst StudentPage: React.FC = () => {\n    const subjects = useSubjects(state => state.subjects)\n    const filterRef = useRef<HTMLInputElement>(null);\n    const [filter, setFilter] = React.useState(\"\");\n    const filteredSubjects = subjects.filter(subject => subject.name.toLowerCase().includes(filter.toLowerCase()));\n\n    const onFilterChange = useCallback(() => {\n        if (filterRef.current) {\n            setFilter(filterRef.current.value);\n        }\n    }, [setFilter, filterRef]);\n\n    return (\n        <div>\n            <h1>Student Page</h1>\n            <TextField onChange={onFilterChange} inputRef={filterRef} id={\"filter\"} label={\"Search\"}\n                       variant={\"outlined\"} placeholder={\"Subject name...\"} fullWidth className={\"filter-input\"}/>\n            <div style={{display: \"flex\", flexWrap: \"wrap\"}}>\n                {filteredSubjects.map(subject => (\n                    <SubjectCard key={subject.name} subject={subject}/>\n                ))}\n                {filteredSubjects.length === 0 && <h2>No subjects found</h2>}\n            </div>\n        </div>)\n}\n\nexport default StudentPage;\n","import React from \"react\";\nimport { useSubjects } from \"../store/useSubjects\";\nimport { useParams } from \"react-router-dom\";\nimport { Typography } from \"@mui/material\";\n\n\nconst SubjectPage: React.FC = () => {\n    const getSubject = useSubjects(state => state.getSubject);\n    const {subjectName} = useParams();\n    const subject = getSubject(subjectName);\n\n    return (\n        <div>\n            {subject && (\n                <div>\n                    <h2>{subject.name}</h2>\n                    <Typography>{subject.description}</Typography>\n                    <Typography>Year: {subject.year}</Typography>\n                    <Typography variant={\"body2\"}>Student Count: {subject.studentCount}</Typography>\n                </div>)}\n            {!subject && <h2>Subject not found</h2>}\n        </div>\n    )\n}\n\nexport default SubjectPage;\n","import React from 'react';\nimport './App.css';\nimport Navbar from \"./components/Navbar\";\nimport Login from \"./components/Login\";\nimport { BrowserRouter, Navigate, Route, Routes } from \"react-router-dom\";\nimport TeacherPage from \"./components/TeacherPage\";\nimport StudentPage from \"./components/StudentPage\";\nimport SubjectPage from './components/SubjectPage';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <BrowserRouter>\n                <Navbar/>\n                <Routes>\n                    <Route index path=\"/\" element={<Login/>}/>\n                    <Route path=\"/student\" element={<StudentPage/>}/>\n                    <Route path=\"/teacher\" element={<TeacherPage/>}/>\n                    <Route path=\"/subject/:subjectName\" element={<SubjectPage/>}/>\n                    <Route path=\"*\" element={<Navigate to=\"/\" replace/>}/>\n                </Routes>\n            </BrowserRouter>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}